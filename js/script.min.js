function addCountryListControl(){L.Control.CountryList=L.Control.extend({onAdd:function(){return $select=$('<select id="countryList" class="form-control leaflet-control leaflet-bar" onchange="validateCountry(this.value)"></select>'),$select.append('<option value="" disabled selected>Select a country</option>'),$select.get(0)}}),L.control.countryList=function(t){return new L.Control.CountryList(t)},L.control.countryList({position:"topleft"}).addTo(map),L.DomEvent.disableClickPropagation($("#countryList").get(0))}function checkURLHash(){location.hash?(hash=decodeURI(location.hash.substring(1)),validateCountry(hash)):map.locate()}function convertTime(t){const e=new Date(1e3*t);let o=e.getHours();o=o<10?`0${o}`:o;let n=e.getMinutes();return n=n<10?`0${n}`:n,`${o}:${n}`}function displayCountryInfo(){let t={};const e=countryData.opencage,o=countryData.rest;t["Country Code"]=e.components.country_code,t.Capital=o.capital||null,t.Continent=e.components.continent||null;let n=o.population||null;n&&(t.Population=formatNumber(n));let a=o.area||null;a&&(a=formatNumber(a),t["Land Area"]=`${a} km<sup>2</sup>`);const r=e.annotations.timezone.short_name||null;let i=e.annotations.timezone.offset_string||null;i=i?`(${i})`:null,t["Time Zone"]=`${r} ${i}`,callcode=e.annotations.callingcode||null,t["Calling Code"]=callcode?`+${callcode}`:null,t.TLD=o.topLevelDomain||null,t.Demonym=o.demonym||null;const l=countryData.wiki||null;t.Wikipedia=l?`<a href="${l}" target="_blank">Wikipedia</a>`:null;let s=[];o.languages.forEach(t=>s.push(t.name)),s.length>1?t.Languages=s.join(", "):t.Language=s[0];const c=Object.keys(t).sort();let d={};c.forEach(e=>d[e]=t[e]),$("#countryName").html(`${countryName} <img src="${o.flag}" class="thumbnail alt="country flag">`);for(let t in d)d[t]&&($("#infoTable").append("<tr></tr>"),$("#infoTable tr:last-child").append(`<th scope"row">${t}</th>`),$("#infoTable tr:last-child").append(`<td >${d[t]}</td>`))}function displayBorders(){const t=countryData.borders.geometry;let e=[];"MultiPolygon"===t.type?t.coordinates.forEach(t=>{let o=[];t[0].forEach(t=>{const e=t[1],n=t[0];o.push([e,n])}),e.push(o)}):t.coordinates[0].forEach(t=>{const o=t[0],n=t[1];e.push([n,o])}),map.fitBounds(e),window.borders=L.polygon(e,{bubblingMouseEvents:!1}).addTo(map),L.DomEvent.disableClickPropagation($(window.borders).get(0))}function displayCities(){const t=countryData.cities;let e=[];t.forEach(t=>{const o=L.ExtraMarkers.icon({prefix:"fa",icon:"fa-city",markerColor:t.name===countryData.rest.capital?"red":"yellow"}),n=L.marker([t.coordinates.latitude,t.coordinates.longitude],{icon:o,title:t.name});let a=`<h2>${t.name}</h2>`;t.name===countryData.rest.capital&&(a+='<p class="lead">Capital</p>'),a+=`<p>${t.snippet}</p>`,t.wiki&&(a+=`<p><a href="${t.wiki}" target="_blank">Wikipedia</a></p>`),t.weather&&(a+=weather(t.weather)),n.on("click",function(){$("#popupContent").html(a),$("#popupModal").modal("toggle")}),e.push(n)}),window.cityMarkers=L.layerGroup(e).addTo(map)}function displayCovid(){const t=countryData.covid;let e={};lastEntry=t.length-1,recent=t[lastEntry],prevD=t[lastEntry-1],prevW=t[lastEntry-7],prevM=t[lastEntry-30],e.latestDate=recent.date,e.tC=formatNumber(recent.confirmed),e.tD=formatNumber(recent.deaths),e.tR=formatNumber(recent.recovered),e.lC=formatNumber(recent.confirmed-prevD.confirmed),e.lD=formatNumber(recent.deaths-prevD.deaths),e.lR=formatNumber(recent.recovered-prevD.recovered),e.wC=formatNumber(recent.confirmed-prevW.confirmed),e.wD=formatNumber(recent.deaths-prevW.deaths),e.wR=formatNumber(recent.recovered-prevW.recovered),e.mC=formatNumber(recent.confirmed-prevM.confirmed),e.mD=formatNumber(recent.deaths-prevM.deaths),e.mR=formatNumber(recent.recovered-prevM.recovered);for(const t in e)if(Object.hasOwnProperty.call(e,t)){const o=e[t];$(`#${t}`).text(o)}$("#covid-link").removeClass("d-none")}function displayMountains(){let t=[];const e=L.ExtraMarkers.icon({prefix:"fa",icon:"fa-mountain",markerColor:"green"}),o=countryData.mountains;o.forEach(o=>{const n=L.marker([o.lat,o.lng],{icon:e,title:o.name});let a=`<h2>${o.name}</h2>`,r=o.elevation||null;r=r?r+" m":"undefined",a+=`<p><strong>Elevation:</strong> ${r} </p>`,o.wiki&&(a+=`<p><a href="${o.wiki}" target="_blank">Wikipedia</a></p>`),n.on("click",function(){$("#popupContent").html(a),$("#popupModal").modal("toggle")}),t.push(n)}),window.mountainMarkers=L.layerGroup(t).addTo(map)}function displayPOIs(){const t=countryData.POIs;let e=[];const o=L.ExtraMarkers.icon({prefix:"fa",icon:"fa-star",markerColor:"blue"});t.forEach(t=>{const n=L.marker([t.coordinates.latitude,t.coordinates.longitude],{icon:o,title:t.name});let a=`<h2>${t.name}</h2>`;a+=`<p>${t.snippet}</p>`,t.wiki&&(a+=`<p><a href="${t.wiki}" target="_blank">Wikipedia</a></p>`),n.on("click",function(){$("#popupContent").html(a),$("#popupModal").modal("toggle")}),e.push(n)}),window.poiMarkers=L.layerGroup(e).addTo(map)}function displayRates(){const t=countryData.opencage.annotations.currency,e=t.html_entity||t.symbol||null,o=t.iso_code||null,n=t.name||null,a=t.subunit||null;let r=null;e&&a?r=`(${e} / ${a})`:e&&!a?r=`(${e})`:!e&&a&&(r=`(${a})`);const i="EUR"===o?"svg\\Europe.svg":countryData.rest.flag;$("#countryCurrencyFlag").attr({src:i,alt:`${countryName} flag`}),$("#countryCurrencyCode").text(o),$("#countryCurrency").html(`${n} ${r}`);for(const t in countryData.rates.rates){const e=Number(countryData.rates.rates[t]).toFixed(3),o=countryData.rates.flags[t];$currency=$("<tr/>"),$currency.append(`<td><img src='${o}' class='currencyFlag' alt="${t} flag"></td>`),$currency.append(`<th scope='row' class="">${t}</th>`),$currency.append(`<td class="w-50 text-right">${e}</td>`),$("#financeTable").append($currency)}}function formatNumber(t){return t>1e9?(t/1e9).toPrecision(2)+" billion":t>1e8?Math.round(t/1e6)+" million":t>1e6?(t/1e6).toPrecision(2)+" million":t>1e4?Math.round(t/1e3)+",000":t}function geocode(t,e){$.getJSON("php/api",{get:"geocode",lat:t,lng:e},function(o,n){o.country_code&&getCountry({lat:t,lng:e})})}function getCountry({countryName:t,lat:e,lng:o}){$("#preloader").fadeIn(),resetMap();let n={get:"country"};t?n.country=t:e&&o&&(n.lat=e,n.lng=o),$.getJSON("php/api",n,function(t,n){console.log(t),e&&o&&(window.countryName=t.opencage.components.country,window.countryCode=t.opencage.components.country_code),window.countryData=t,document.title=`Gazetteer | ${window.countryName}`,location.hash=window.countryName,t.opencage&&t.rest&&(t.borders&&displayBorders(),displayCountryInfo(),t.rates?displayRates():$("#ratesError").toggleClass("d-none"),t.mountains&&displayMountains(),t.cities&&displayCities(),t.POIs&&displayPOIs(),t.covid?displayCovid():$("#covid-link").addClass("d-none"),window.infoButton.enable())}).then(function(){$("#preloader").fadeOut()})}function getCountryList(){$.getJSON("php/api",{get:"countryList"},function(t,e){t.forEach(t=>{const e=t[0].replace(/ /g,"-");$("#countryList").append(`<option id="${e}" value="${t[0]}" data="${t[1]}">${t[0]}</option>`)})}).then(checkURLHash)}function init(){map.on("click",onMapClick),map.on("locationfound",onLocationFound),map.on("locationerror",onLocationError),L.control.attribution({prefix:'<a href="https://www.leafletjs.com" target="_blank">Leaflet</a>'}).addTo(map);const t=L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"}).addTo(map),e=L.tileLayer("https://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default/{time}/{tilematrixset}{maxZoom}/{z}/{y}/{x}.{format}",{attribution:'Imagery provided by services from the Global Imagery Browse Services (GIBS), operated by the NASA/GSFC/Earth Science Data and Information System (<a href="https://earthdata.nasa.gov" target="_blank">ESDIS</a>) with funding provided by NASA/HQ.',bounds:[[-85.0511287776,-179.999999975],[85.0511287776,179.999999975]],minZoom:1,maxZoom:8,format:"jpg",time:"",tilematrixset:"GoogleMapsCompatible_Level"}),o=L.tileLayer("https://{s}.tile.jawg.io/jawg-streets/{z}/{x}/{y}{r}.png?access-token=Kyyk5x2h2cziidv4NudH48i2lgxN5j1e3lo5CtRHb8th7m5mbfxeq7qB71thO2ZE",{attribution:'<a href="http://jawg.io" title="Tiles Courtesy of Jawg Maps" target="_blank">&copy; <b>Jawg</b>Maps</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors',minZoom:0,maxZoom:22,subdomains:"abcd",accessToken:"Kyyk5x2h2cziidv4NudH48i2lgxN5j1e3lo5CtRHb8th7m5mbfxeq7qB71thO2ZE"}),n=L.tileLayer("https://{s}.tile.jawg.io/jawg-dark/{z}/{x}/{y}{r}.png?access-token=Kyyk5x2h2cziidv4NudH48i2lgxN5j1e3lo5CtRHb8th7m5mbfxeq7qB71thO2ZE",{attribution:'<a href="http://jawg.io" title="Tiles Courtesy of Jawg Maps" target="_blank">&copy; <b>Jawg</b>Maps</a> &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors',minZoom:0,maxZoom:22,subdomains:"abcd",accessToken:"Kyyk5x2h2cziidv4NudH48i2lgxN5j1e3lo5CtRHb8th7m5mbfxeq7qB71thO2ZE"}),a={Streets:o,Dark:n,Satellite:t,Night:e};map.fitWorld(),addCountryListControl(),getCountryList(),L.control.zoom({position:"topright"}).addTo(map),L.easyButton("fa-location-arrow",function(){map.locate()},{position:"topright"}).addTo(map),L.control.layers(a).addTo(map),window.infoButton=L.easyButton("fa-info",function(){$("#countryModal").modal("toggle")},{position:"topleft"}).addTo(map).disable()}function onLocationError(t){alert(t.message),$("#preloader").fadeOut()}function onLocationFound(t){const e=t.latlng.lat,o=t.latlng.lng;getCountry({lat:e,lng:o})}function onMapClick(t){const e=t.latlng.lat%90,o=t.latlng.lng>180?t.latlng.lng-360:t.latlng.lng;geocode(e,o)}function resetMap(){window.borders&&map.removeLayer(borders),map.removeLayer(cityMarkers),map.removeLayer(mountainMarkers),map.removeLayer(poiMarkers),window.infoButton&&window.infoButton.disable(),$("#infoTable").empty(),$("#financeTable").empty()}function validateCountry(t){const e=t.replace(/ /g,"-");$(`#${e}`).length?(window.countryName=t,window.countryCode=$(`#${e}`).attr("data"),getCountry({countryName:countryName})):alert("Not a valid country")}function weather(t){const e=`\n  <h3>Current Weather</h3>\n    <table id="weather" class="table">\n      <tbody>\n      ${WeatherReport(t)}\n      </tbody>\n    </table>`;return e}function WeatherReport(t){const e=`<i class="wi wi-owm-${t.weather[0].id}"></i>`;let o=t.weather[0].description;o=o[0].toUpperCase()+o.slice(1);const n=Math.round(t.main.temp),a=Math.round(t.main.feels_like),r=Math.round(t.main.temp_max),i=Math.round(t.main.temp_min),l=`<i class = "wi wi-wind from-${t.wind.deg}-deg"></i>`,s=t.wind.deg,c=Math.round(t.wind.speed),d=t.main.pressure,u=t.main.humidity,p=convertTime(t.sys.sunrise),m=convertTime(t.sys.sunset);let y=`\n  <tr>\n    <td class="summary">${e} ${o}</td>\n    <td ><span class="summary">${n}<i class = "wi wi-celsius"></i> </span>Feels like ${a}<i class = "wi wi-celsius"></i></td>\n  </tr>\n  <tr>\n    <td><i class = "wi wi-thermometer"></i> ${r}<i class = "wi wi-celsius"></i></td>\n    <td><i class = "wi wi-thermometer-exterior"></i> ${i}<i class = "wi wi-celsius"></i></td>\n  </tr>\n  <tr>\n    <td><i class= "wi wi-strong-wind"></i> ${c} m/s</td>\n    <td>${l} ${s}&#176;</td>\n  </tr>\n  <tr>\n    <td><i class = "wi wi-humidity"></i> ${u} % </td>\n    <td><i class = "wi wi-barometer"></i> ${d} hPa</td>\n  </tr>\n  <tr>\n  <td><i class = "wi wi-sunrise"></i> ${p}</td>\n  <td><i class = "wi wi-sunset"></i> ${m}</td>\n  </tr>`;return y}window.map=L.map("map",{attributionControl:!1,minZoom:2,maxBounds:[[-180,-180],[180,180]],zoomControl:!1}),window.cityMarkers=L.layerGroup(),window.mountainMarkers=L.layerGroup(),window.poiMarkers=L.layerGroup(),window.countryData=null,window.countryName=null,window.countryCode=null,window.infoButton=null,$(function(){init()});